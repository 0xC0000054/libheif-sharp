<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AuxiliaryImageAPINotSupported" xml:space="preserve">
    <value>This method requires LibHeif version 1.11 or later.</value>
  </data>
  <data name="CannotGetAllAuxillaryImages" xml:space="preserve">
    <value>Could not get all of the auxillary images.</value>
  </data>
  <data name="CannotGetAllMetadataBlockIds" xml:space="preserve">
    <value>Could not get all of the meta-data block ids.</value>
  </data>
  <data name="CannotGetAllThumbnailIds" xml:space="preserve">
    <value>Could not get all of the thumbnail ids.</value>
  </data>
  <data name="CannotGetAllTopLevelImageIds" xml:space="preserve">
    <value>Could not get all of the top-level image ids.</value>
  </data>
  <data name="CoerceStringValueToBooleanFailedFormat" xml:space="preserve">
    <value>Unable to convert the {0} parameter to a Boolean.</value>
    <comment>{0} is the parameter name.</comment>
  </data>
  <data name="CoerceStringValueToIntegerFailedFormat" xml:space="preserve">
    <value>Unable to convert the {0} parameter to an integer.</value>
    <comment>{0} is the parameter name.</comment>
  </data>
  <data name="ColorProfileTypeNotSupported" xml:space="preserve">
    <value>The color profile type is not supported.</value>
  </data>
  <data name="FileStreamDoesNotSupportSeeking" xml:space="preserve">
    <value>The device does not support seeking.</value>
  </data>
  <data name="HeifContextAlreadyHasReader" xml:space="preserve">
    <value>This HeifContext already has an associated reader.</value>
  </data>
  <data name="HeifContextCreationFailed" xml:space="preserve">
    <value>Unable to create the native HeifContext.</value>
  </data>
  <data name="HeifDecodingOptionsCreationFailed" xml:space="preserve">
    <value>Unable to create the native HeifDecodingOptions.</value>
  </data>
  <data name="HeifEncodingOptionsCreationFailed" xml:space="preserve">
    <value>Unable to create the native HeifEncodingOptions.</value>
  </data>
  <data name="IccProfileLargerThan2Gb" xml:space="preserve">
    <value>The ICC profile is larger than 2 GB.</value>
  </data>
  <data name="IccProfileZeroBytes" xml:space="preserve">
    <value>The ICC profile is zero bytes.</value>
  </data>
  <data name="ImageDoesNotContainChannel" xml:space="preserve">
    <value>The image does not contain the specified channel.</value>
  </data>
  <data name="ImageUndefinedBitDepth" xml:space="preserve">
    <value>The image has an undefined bit depth.</value>
  </data>
  <data name="LibHeifVersionNotSupportedFormat" xml:space="preserve">
    <value>LibHeif must be version {0}.{1}.{2} or later.</value>
    <comment>{0} is the major version. {1} is the minor version. {2} is the maintenance version.</comment>
  </data>
  <data name="MetadataBlockLargerThan2Gb" xml:space="preserve">
    <value>The meta-data block is larger than 2 GB.</value>
  </data>
  <data name="NclxProfileCreationFailed" xml:space="preserve">
    <value>Unable to create the native NCLX color profile.</value>
  </data>
  <data name="NoTopLevelImages" xml:space="preserve">
    <value>The file does not have any top-level images.</value>
  </data>
  <data name="ParameterIsEmptyArrayFormat" xml:space="preserve">
    <value>{0} is an empty array.</value>
    <comment>{0} is the parameter name.</comment>
  </data>
  <data name="ParameterMustBePositive" xml:space="preserve">
    <value>Must be a positve number.</value>
  </data>
  <data name="ParameterStringIsEmptyOrWhitespaceFormat" xml:space="preserve">
    <value>{0} is empty or contains only whitespace characters.</value>
    <comment>{0} is the parameter name.</comment>
  </data>
  <data name="ReaderNotSet" xml:space="preserve">
    <value>A reader must be set before calling before this method.</value>
  </data>
  <data name="StreamCannotReadAndSeek" xml:space="preserve">
    <value>The stream must support reading and seeking.</value>
  </data>
  <data name="StreamCannotWrite" xml:space="preserve">
    <value>The stream must support writing.</value>
  </data>
  <data name="UnspecifiedError" xml:space="preserve">
    <value>An unspecified error occurred.</value>
  </data>
</root>